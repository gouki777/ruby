"r" ：Read-only. Starts at beginning of file (default mode).
"r+" ：Read-write. Starts at beginning of file.
"w" ：Write-only. Truncates existing file to zero length or creates a new file for writing.
"w+" ：Read-write. Truncates existing file to zero length or creates a new file for reading and writing.
"a" ：Write-only. Starts at end of file if file exists; otherwise, creates a new file for writing.
"a+" ：Read-write. Starts at end of file if file exists; otherwise, creates a new file for reading and writing.
"b" ：(DOS/Windows only.) Binary file mode. May appear with any of the key letters listed above

1.新建文件+写入
f=File.new(File.join(".","222.txt"),"w+")
f.puts("i am syf.")
f.puts("Hello world.")
f.close


2.读取文件
f=File.open(File.join(".","222.txt"),"r")
 f.each { |line| print "#{f.lineno}.", line }
f.close

3.新建、重命名文件、删除
File.new("books.txt","w")
File.rename("books.txt","123.txt")
File.delete("123.txt")
二.目录操作
1.创建目录
Dir.mkdir("3333")
2.删除目录
Dir.rmdir("3333")
3.查询目录里的文件
p Dir.entries(File.join("C:","Ruby")).join(' ') 
4.遍历目录
Dir.entries(File.join("C:","Ruby")).each {
    |e| puts e
    }

1、ARGV and ARGF
ARGV
    ARGV << "cnblogslink.txt"
    #The gets method is a Kernel method that gets lines from ARGV
    print while gets
    p ARGV.class

ARGF
    while line = ARGF.gets
     print line
    end
三.文件信息查询
1.文件是否存在
irb(main):001:0> File::exists?("3.rb")
=> true
2.文件是否是文件
irb(main):001:0> File.file?("3.rb")
=> true
3.是否是目录
irb(main):002:0> File::directory?( "/ruby" )
=> true
4.文件权限
irb(main):010:0> File.readable?("3.rb")
=> true
irb(main):011:0> File.writable?("3.rb")
=> true
irb(main):012:0> File.executable?("3.rb")
=> false
5.是否是零长度
irb(main):013:0> File.zero?("3.rb")
=> false
6.文件大小 bytes
irb(main):014:0> File.size?("3.rb")
=> 110
7.文件或文件夹
irb(main):001:0> File.ftype("3333")
=> "directory"
irb(main):019:0> File.ftype("3.rb")
=> "file"
8.文件创建、修改、最后一次存取时间
irb(main):004:0> File::ctime("001.rb")
=> 2016-05-03 22:51:12 +0800
irb(main):005:0> File::mtime("001.rb")
=> 2016-05-03 22:51:12 +0800
irb(main):001:0> File::atime("001.rb")
=> 2016-06-14 16:09:25 +0800
9.遍历目录下所有文件及文件夹 [子目录下不算]
[root@redmine ruby]# cat 006.rb 
# -*- coding: UTF-8 -*-
puts "超找目录下所有文件及文件夹"
Dir["/ruby/*"].each { |x|
 puts x
}
10.条件查询
puts "条件查询"
Dir.foreach('/ruby/test1') { |x| 
 puts x if x !="." && x !=".."
 }
11.查找某一类型文件 （正则）
puts "查找某一类型文件"
Dir["*.rb"].each {|x| 
      puts x
     }
12.遍历/ruby目录下所有文件，文件名字含有00的文件
# -*- coding: UTF-8 -*-
puts "open 查询"
Dir.open('/ruby') { |d| d.grep /00/ }.each { |x| 
 puts x 
}
13.正则表达式查询 遍历包含12的文件名
# -*- coding: UTF-8 -*-
puts "正则表达式查询"
Dir["/ruby/[12]*"].each{ |x| 
 puts x
}
遍历目录以ex开头的
Dir["[^ex]*"].each{ |x| puts x }
遍历目录00和123的文件名
Dir["/ruby/{00,123}*"].each{ |x| puts x }
遍历文件第二个字母为x的文件
Dir["/ruby/?x*"].each{ |x| puts x }
14.遍历当前目录及子目录所有文件
require 'find'
Find.find ('./') { |path| puts path }
15.查询目录及子目录文件
require "find"
Find.find("/etc/passwd",".") do |f|
 Find.prune if f == "."
puts f
end
15.文件判断 判断是否存在
if File.exist?("./123/test")
  Dir.rmdir("./123/test")
else
  Dir.mkdir("./123/test")
end
16. cmp 文件比较
FileUtils.cmp("F:\\test1.rb", "F:\\test2.rb") 
# 比较两个文件是否相同，返回 true 或者 false


